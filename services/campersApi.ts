import { api } from './api';
import { Camper, FilterParams } from '@/types/campers';

interface ApiResponse {
  total: number;
  items: Camper[];
}

export const campersApi = {
  getCampers: async (params: FilterParams = {}): Promise<Camper[]> => {
    console.log('üîÑ Fetching ALL campers from API');

    try {
      // –î–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –ë–ï–ó –ø–∞–≥–∏–Ω–∞—Ü–∏–æ–Ω–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
      const response = await api.get<ApiResponse>('/campers');
      
      // API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç —Å –ø–æ–ª—è–º–∏ total –∏ items
      const apiData = response.data;
      const campersData = apiData?.items || [];

      console.log('üìã API Response:', {
        status: response.status,
        dataStructure: apiData,
        itemsCount: campersData.length,
        firstItem: campersData[0]
      });

      
      console.log(`‚úÖ Received ${campersData.length} campers total`);
      
      return campersData;
    } catch (error: any) {
      console.error('‚ùå Error fetching campers from API:', {
        status: error.response?.status,
        message: error.message,
        url: error.config?.url
      });
      
      // Fallback: –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–∞–ø—Ä—è–º—É—é
      try {
        console.log('üîÑ Trying direct fetch as fallback...');
        const directResponse = await fetch('https://66b1f8e71ca8ad33d4f5f63e.mockapi.io/campers');
        if (directResponse.ok) {
          const data = await directResponse.json();
          const items = data.items || data || [];
          console.log(`‚úÖ Fallback successful: received ${items.length} campers`);
          return items;
        }
      } catch (fallbackError) {
        console.error('‚ùå Fallback also failed:', fallbackError);
      }
      
      return [];
    }
  },

  getCamperById: async (id: string): Promise<Camper> => {
    try {
      const response = await api.get<Camper>(`/campers/${id}`);
      return response.data;
    } catch (error: any) {
      console.error(`Error fetching camper ${id}:`, error);
      
      // Fallback –¥–ª—è –¥–µ—Ç–∞–ª–µ–π –∫–µ–º–ø–µ—Ä–∞
      try {
        const directResponse = await fetch(`https://66b1f8e71ca8ad33d4f5f63e.mockapi.io/campers/${id}`);
        if (directResponse.ok) {
          return await directResponse.json();
        }
      } catch (fallbackError) {
        console.error('Fallback for camper details failed:', fallbackError);
      }
      
      throw error;
    }
  },
};